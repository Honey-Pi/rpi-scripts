#!/bin/bash

[ -z $BASH ] && { exec bash "$0" "$@" || exit; }

# file: post-upgrade.sh
# This script will install required software for HoneyPi after an upgrade.
# It is recommended to run it in your home directory.

# Ensure the script is run as root
if [ "$(id -u)" != 0 ]; then
    echo 'Sorry, you need to run this script with sudo'
    exit 1
fi

VERSION="post-upgrade"

log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1" | tee -a /var/log/honeypi_post_upgrade.log
}

replace_if_different() {
    local src=$1
    local dest=$2
    local backup=$3
    if [ ! -f "$dest" ]; then
        log "The destination file $dest does not exist, copying directly..."
        cp "$src" "$dest"
    elif cmp -s "$src" "$dest"; then
        log "The $(basename $dest) file is already the correct file..."
    else
        log "The $(basename $dest) file is different..."
        [ -n "$backup" ] && mv "$dest" "$backup"
        cp "$src" "$dest"
    fi
}

install_packages_if_missing() {
    for pkg in "$@"; do
        if ! dpkg -s "$pkg" >/dev/null 2>&1; then
            log "Installing package $pkg"
            apt-get install -y --no-install-recommends "$pkg"
        else
            log "Package $pkg is already installed"
        fi
    done
}

install_pip_package_if_missing() {
    for pkg in "$@"; do
        if ! pip3 show "$pkg" > /dev/null 2>&1; then
            log "Installing pip package $pkg"
            pip3 install "$pkg"
        else
            log "Pip package $pkg is already installed"
        fi
    done
}

update_config_file() {
    local file=$1
    local pattern=$2
    local entry=$3
    if grep -q "$pattern" "$file"; then
        log "$entry already set in $file, skipping."
    else
        echo "$entry" >> "$file"
        log "Added $entry to $file"
    fi
}

# Determine the correct config file path
CONFIG_FILE="/boot/config.txt"
if grep -q 'DO NOT EDIT THIS FILE' /boot/config.txt; then
    CONFIG_FILE="/boot/firmware/config.txt"
fi

log "Using $CONFIG_FILE for configuration updates."

log '>>> Running post-upgrade script...'

# Apply additional configurations
mkdir -p /var/log/ntpsec/

# Replace configuration files if different
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/interfaces" "/etc/network/interfaces" "/etc/network/interfaces.orig"
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/update.sh" "/home/pi/HoneyPi/update.sh" "/home/pi/HoneyPi/update.sh.orig"
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/dhcpcd.conf" "/etc/dhcpcd.conf" "/etc/dhcpcd.conf.orig"
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/dnsmasq.conf" "/etc/dnsmasq.conf" "/etc/dnsmasq.conf.orig"
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/hostapd" "/etc/default/hostapd" "/etc/default/hostapd.orig"
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/hostapd.conf.tmpl" "/etc/hostapd/hostapd.conf.tmpl" "/etc/hostapd/hostapd.conf.tmpl.orig"
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/lighttpd.conf" "/etc/lighttpd/lighttpd.conf"
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/ntp.conf" "/etc/ntp.conf"

# Restart lighttpd if configuration changed
if cmp -s "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/lighttpd.conf" "/etc/lighttpd/lighttpd.conf"; then
    log "The lighttpd.conf file is already the correct file..."
else
    log "The lighttpd.conf file is different..."
    cp "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/lighttpd.conf" "/etc/lighttpd/lighttpd.conf"
    service lighttpd force-reload
fi

apt-get -y update --allow-releaseinfo-change
export PIP_ROOT_USER_ACTION=ignore

log "Install required modules after v1.3.4 for dht..."
install_packages_if_missing libgpiod2
install_pip_package_if_missing adafruit-circuitpython-dht

log "Install required modules after v1.3.7 used for oled display..."
install_pip_package_if_missing Pillow smbus2
install_packages_if_missing libopenjp2-7 libtiff5

log "Install required modules after v1.3.7 used for ds18b20..."
install_pip_package_if_missing ds18b20

log "Install required modules after v1.3.7 used for rak811..."
install_pip_package_if_missing rak811

log "Install required modules after v1.3.7 used for WittyPi..."
install_pip_package_if_missing smbus2 pytz

log "Install required modules after v1.3.7 used for PA1010D..."
install_pip_package_if_missing pynmea2

log "Install required modules after v1.3.7 for dht..."
install_packages_if_missing python3-psutil

log "Install required modules after v1.3.9 used for rak811 & WittyPi..."
update_config_file "$CONFIG_FILE" "dtoverlay=pi3-miniuart-bt" "dtoverlay=pi3-miniuart-bt"

log "Enable I2C"
update_config_file "/etc/modules" "i2c-bcm2708" "i2c-bcm2708"
update_config_file "/etc/modules" "i2c-dev" "i2c-dev"
update_config_file "$CONFIG_FILE" "dtparam=i2c1=on" "dtparam=i2c1=on"
update_config_file "$CONFIG_FILE" "dtparam=i2c_arm=on" "dtparam=i2c_arm=on"
 
log 'Uninstall pip numpy python3-numpy'
pip3 uninstall --yes numpy
apt-get -y remove python3-numpy

log 'Install pip3 timezonefinder and numpy'
install_packages_if_missing libopenblas-dev
install_pip_package_if_missing timezonefinder==6.1.8 numpy

log "Migrate autostart from rc.local to systemd service"
if grep -q 'sleep 2;python3' /etc/rc.local; then
    sed -i '/(sleep 2;python3/c\#' /etc/rc.local # disable autostart in rc.local
fi
replace_if_different "/home/pi/HoneyPi/rpi-scripts/$VERSION/post-upgrade-overlays/honeypi.service" "/lib/systemd/system/honeypi.service"

# Reload systemd daemon and enable HoneyPi service if necessary
if ! systemctl is-enabled honeypi.service >/dev/null 2>&1; then
    chmod 644 /lib/systemd/system/honeypi.service
    systemctl daemon-reload
    systemctl enable honeypi.service
fi

echo "postupdatefinished 1" >> /var/www/html/version.txt
